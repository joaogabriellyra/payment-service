{
  "openapi": "3.0.0",
  "info": {
    "title": "Payment Service",
    "description": "O usuário poderá criar uma conta no sistema em que será permitido realizar e receber transferências entre os usuários já cadastrados. O usuário também poderá alterar as suas informações. Será permitido um cadastro por CPF. O passo a passo da construção da aplicação consiste nas seguintes etapas: \n- criar um docker-compose e criar uma rota /healthy que retorna ‘the application is healthy’ <b>OK</b> \n- configurar typeORM <b>OK</b> \n- a documentação do projeto será pelo swagger <b>OK</b> \n- cadastrar usuário com post <b>OK</b> \n- as senhas serão encriptografadas ao serem salvas <b>OK</b> \n- haverá um e-mail para confirmação de cadastro <b>OK</b> \n - token será implementado para a lógica de confirmação de e-mail  \n- fazer post para login \n- a autenticação do login será via JWT \n- pegar informações do usuário com get \n- atualizar informações do usuário com put \n- deletar usuário com delete (deleção lógica) \n- fazer post depositando \n- fazer get saldo \n- fazer post transferindo (todo usuário cadastrado poderá receber uma transferência) \n- fazer post sacando",
    "contact": {
      "email": "jgabriellyra@hotmail.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/users/new-user": {
      "post": {
        "summary": "Cadastro de usuário",
        "description": "Essa é a rota responsável por cadastrar um novo usuário",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Gabriel",
                    "lastName": "Lyra",
                    "email": "jgabriellyra@hotmail.com",
                    "password": "123456@Ga"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida!"
          }
        }
      }
    },
    "/users/confirm-email": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Confirma o e-mail utilizado no cadastro",
        "description": "",
        "parameters": [{
            "name": "authorization",
            "in": "query",
            "description": "Token para validar e-mail utilizado no cadastro",
            "required": true,
            "schema": {
              "type": "string"
            }
          }],
        "responses": {
          "200": {
            "description": "E-mail confirmado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Token inválido!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },

          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "string",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}